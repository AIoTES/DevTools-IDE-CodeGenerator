#parse("common.vm")
#set($axioms = $ontology.getAxioms())
#set($obj_props_domain = $ontology.getAxioms($AxiomType.OBJECT_PROPERTY_DOMAIN))
#set($data_props = $ontology.getAxioms($AxiomType.DATA_PROPERTIE_DOMAIN))
##MACRO TO PROCESS OBJECT PROPERTIES
#macro(objectProps $cls)
#foreach($prop in $obj_props_domain)
/* ***************************************************
* Object Property ${prop.getProperty().asOWLObjectProperty().getIRI()}
*/
#set($prop_aux = ${prop.getProperty().asOWLObjectProperty().getIRI().getFragment()} )
  public Collection<? extends WrappedIndividual> get${prop_aux} () {
  return getDelegate().getPropertyValues(getOwlIndividual(),Vocabulary.OBJECT_PROPERTY_${prop_aux.toUpperCase()}, WrappedIndividualImpl.class);
}

public boolean has${prop_aux}() {
  return !get ${prop_aux}().isEmpty();
}

public void add ${prop_aux}(WrappedIndividual new${prop_aux}) {
  getDelegate().addPropertyValue(getOwlIndividual(), 
                                  Vocabulary.OBJECT_PROPERTY_${prop_aux.toUpperCase()},
                                  new${prop_aux});
}

public void removeGameName(WrappedIndividual old${prop_aux}) {
  getDelegate().removePropertyValue(getOwlIndividual(),
                                    Vocabulary.OBJECT_PROPERTY_ ${prop_aux.toUpperCase()},
                                    old${prop_aux});
}
##${prop_aux.replaceFirst(String.valueOf($prop_aux.charAt(0)), String.valueOf($prop_aux.charAt(0)).toUpperCase())}
#end
#end
#macro(generateClass)
public class Default${class.getIRI().getFragment()} extends WrappedIndividualImpl implements ${class.getIRI().getFragment()}  {
    public ${class.getIRI().getFragment()} (CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }
  #objectProps($class)
  }
#end
#generateClass()
}
